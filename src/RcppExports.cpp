// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// llbR1_i
double llbR1_i(NumericVector betaij_i, NumericVector sij2_i, double tau2inv);
RcppExport SEXP _emfuncs_llbR1_i(SEXP betaij_iSEXP, SEXP sij2_iSEXP, SEXP tau2invSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type betaij_i(betaij_iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sij2_i(sij2_iSEXP);
    Rcpp::traits::input_parameter< double >::type tau2inv(tau2invSEXP);
    rcpp_result_gen = Rcpp::wrap(llbR1_i(betaij_i, sij2_i, tau2inv));
    return rcpp_result_gen;
END_RCPP
}
// logsumexp
double logsumexp(NumericVector x);
RcppExport SEXP _emfuncs_logsumexp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(logsumexp(x));
    return rcpp_result_gen;
END_RCPP
}
// llb0_ab
NumericVector llb0_ab(double betaij, double sij2, double f, double alpha);
RcppExport SEXP _emfuncs_llb0_ab(SEXP betaijSEXP, SEXP sij2SEXP, SEXP fSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type betaij(betaijSEXP);
    Rcpp::traits::input_parameter< double >::type sij2(sij2SEXP);
    Rcpp::traits::input_parameter< double >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(llb0_ab(betaij, sij2, f, alpha));
    return rcpp_result_gen;
END_RCPP
}
// llbR0_i
double llbR0_i(NumericVector betaij_i, NumericVector sij2_i, double f, double alpha);
RcppExport SEXP _emfuncs_llbR0_i(SEXP betaij_iSEXP, SEXP sij2_iSEXP, SEXP fSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type betaij_i(betaij_iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sij2_i(sij2_iSEXP);
    Rcpp::traits::input_parameter< double >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(llbR0_i(betaij_i, sij2_i, f, alpha));
    return rcpp_result_gen;
END_RCPP
}
// deltis
NumericVector deltis(NumericVector betaij_i, NumericVector sij2_i, double f, double alpha);
RcppExport SEXP _emfuncs_deltis(SEXP betaij_iSEXP, SEXP sij2_iSEXP, SEXP fSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type betaij_i(betaij_iSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sij2_i(sij2_iSEXP);
    Rcpp::traits::input_parameter< double >::type f(fSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(deltis(betaij_i, sij2_i, f, alpha));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _emfuncs_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_emfuncs_llbR1_i", (DL_FUNC) &_emfuncs_llbR1_i, 3},
    {"_emfuncs_logsumexp", (DL_FUNC) &_emfuncs_logsumexp, 1},
    {"_emfuncs_llb0_ab", (DL_FUNC) &_emfuncs_llb0_ab, 4},
    {"_emfuncs_llbR0_i", (DL_FUNC) &_emfuncs_llbR0_i, 4},
    {"_emfuncs_deltis", (DL_FUNC) &_emfuncs_deltis, 4},
    {"_emfuncs_rcpp_hello_world", (DL_FUNC) &_emfuncs_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_emfuncs(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
